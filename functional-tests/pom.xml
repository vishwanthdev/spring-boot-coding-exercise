<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>com.telstra.codechallenge</groupId>
    <artifactId>parent</artifactId>
    <version>2.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>functional-tests</artifactId>

  <properties>
    <microservice.port>8080</microservice.port>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>microservice</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.intuit.karate</groupId>
      <artifactId>karate-junit5</artifactId>
      <version>${karate.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- See https://github.com/intuit/karate#folder-structure for explanation -->
    <testResources>
      <testResource>
        <directory>src/test/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <!-- This brings in the microservice to run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>microservice</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <destFileName>app.jar</destFileName>
                  <classifier>exec</classifier>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- This plugin starts the microservice before the integration tests -->
      <plugin>
        <groupId>com.bazaarvoice.maven.plugins</groupId>
        <artifactId>process-exec-maven-plugin</artifactId>
        <version>0.7</version>
        <executions>
          <!-- This starts the microservice -->
          <execution>
            <id>microservice-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>microservice</name>
              <waitForInterrupt>false</waitForInterrupt>
              <healthcheckUrl>http://localhost:${microservice.port}/actuator/health</healthcheckUrl>
              <waitAfterLaunch>30</waitAfterLaunch>
              <arguments>
                <argument>java</argument>
                <argument>-jar</argument>
                <argument>${project.build.directory}/app.jar</argument>
                <argument>--server.port=${microservice.port}</argument>
              </arguments>
            </configuration>
          </execution>
          <!--Stop all processes in reverse order-->
          <execution>
            <id>stop-all</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop-all</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Execute the functional tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <failIfNoTests>true</failIfNoTests>
              <systemProperties></systemProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>